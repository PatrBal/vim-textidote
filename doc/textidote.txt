*textidote.txt*        Grammar checking of LaTeX files with TeXtidote from Vim
*textidote*
*TeXtidote*


==============================================================================
CONTENTS                                                   *TeXtidoteContents*

    1. Overview ......................................... |TeXtidoteOverview|
	2. Features ......................................... |TeXtidoteFeatures|
	3. Usage ............................................ |TeXtidoteUsage|
	4. Installation ..................................... |TeXtidoteInstall|
    5. Configuration .................................... |TeXtidoteConfig|
    3. Interfacing Vim with Antidote .................... |TeXtidoteAn|
       3.1. Spellchecking ............................... |TeXtidoteSpell|
       3.2. Calling definitions and conjugations ........ |TeXtidoteDef|
    4. Spellchecking with TeXtidote ..................... |TeXtidoteTeX|
    5. Switching language ............................... |TeXtidoteSwitch|
    6. License .......................................... |TeXtidoteLicense|
    7. Changelog ........................................ |TeXtidoteChangelog|
    8. Credits .......................................... |TeXtidoteCredits|


==============================================================================
1. Overview                                                *TeXtidoteOverview*

This plugin integrates `TeXtidote` into Vim.  `TeXtidote` provides online 
grammar and style checker for LaTeX documents, but also for Markdown.  It is 
built on top of LanguageTool.   In fact, `TeXtidote` is able to remove all the 
markup of the original file before calling LanguageTool, but it keeps track of 
the relative position of words between the original and "clean text". In 
short, TeXtidote is a version of LanguageTool made blind to LaTeX and Markdown
markup.
* https://sylvainhalle.github.io/textidote

==============================================================================
2. Features                                                *TeXtidoteFeatures*

 - Spelling, grammar and style checking of either the entire buffer or part of
   it.
 - A scratch buffer shows up, listing all the errors.  Pressing <Enter> on an
   error in the error scratch buffer will jump to that error.
 - The location-list is populated, so that you can use location-list Vim
   commands such as `:lopen` to open the location-list window, `:lne` to jump
   to the next error, etc.
 - Optionally, a full html report of TeXtidote analysis can be displayed in
   the default brower.

==============================================================================




2. Configuration

Install `Antidote` and/or `TeXtidote`.
* https://www.antidote.info/en
* https://sylvainhalle.github.io/textidote

*g:antidote_antidote_application*
  Path to the application `Antidote`
  Default value: `'/Applications/Antidote/Antidote 11.app'`

*g:antidote_textidote_application*
  Path to `textidote.jar`
  Default value: `'~/.vim/textidote.jar'`

*g:antidote_textidote_first_language*
  Define your first language to check false friends.
  Must be either empty or one of the following: 'de', 'de_AT', 'de_CH', 
  'en', 'en_CA', 'en_UK', 'es', 'fr' ,'nl', 'pt', 'pl'.
  Default value: empty

==============================================================================
3. Interfacing Vim with Antidote                                  *AntidoteAn*

------------------------------------------------------------------------------
3.1. Spellchecking                                             *AntidoteSpell*

The following command:
`:[range]Antidote`
run spellcheking of the specified range of the file in Antidote. Validation of
the suggested corrections is operated within `Antidote`. When coming back to 
Vim the option of either importing or discarding the validated corrections is
proposed. If `[range]` is omitted, then the spellcheck is run on the whole 
file.

One can also use the mapping:
`<Leader>an`
in either visual or normal mode. In visual mode, the spellcheck is run on the
selection and in normal mode it is run on the whole file.

------------------------------------------------------------------------------
3.2. Calling definitions                                         *AntidoteDef*

The plugin provides a mapping for calling easily the definition of the current
word under the cursor.

`C-@` calls the definition in Antidote of the current word in normal and 
visual modes.

==============================================================================
4. Spellchecking with TeXtidote                                  *AntidoteTeX*

The following command:
`:[range]TeXtidote`
run spellcheking of the specified range of the file in `TeXtidote`. Suggested
corrections are displayed in the default browser. If `[range]` is omitted, 
then the spellcheck is run on the whole file.

One can also use the mapping:
`<Leader>te`
in either visual or normal mode. In visual mode, the spellcheck is run on the
selection and in normal mode it is run on the whole file.

==============================================================================
5. Switching language                                         *AntidoteSwitch*

In `Antidote`, detection of language (english or french only) is performed 
automatically.

In `TeXtidote`, the language is determined by the Vim setting |spelllang|.
To display the current value, run:
`:set spelllang?`
To make a specific choice:
`:set spelllang=en`
`:set spelllang=en_us`
`:set spelllang=en_gb`
`:set spelllang=fr`

==============================================================================
6. License                                                   *AntidoteLicense*

==============================================================================
7. Changelog                                               *AntidoteChangelog*

26/12/2021 Add this documentation
20/12/2021 Add support for TeXtidote
14/08/2018 Initial version

==============================================================================
8. Credits                                                   *AntidoteCredits*
